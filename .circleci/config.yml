version: 2.1
jobs:
  build:
    docker:
      - image: fr3akyphantom/droid-builder:latest
    environment:
      VENDOR: 'xiaomi' # State Product Vendor or Manufacturer
      CODENAME: 'rosy' # Device Codename
      GitHubMail: 'ricoananda.9c26@gmail.com' # Enter GitHub User EMail Address. Has been set in context.
      GitHubName: 'rico192' # Enter GitHub Username. Has been set in context.
      ## Add the following Token in encrypted form inside CircleCI
      # GITHUB_TOKEN: '' # GitHub OAuth Token, for release. Has been set in context.
      Device_Tree: 'https://github.com/rico192/android_device_xiaomi_rosy.git' # The Full URL of
      Vendor_tree: 'https://github.com/rico192/android_vendor_xiaomi_rosy.git'
      Kernel_S: 'https://github.com/rico192/android_kernel_xiaomi_rosy.git'
    working_directory: /home/builder/colt/
    steps:
# - checkout
      - run:
          name: Check if all env vars are set or not
          command: |
            # Do not modify this part
            if [[ -z ${Device_Tree} ]]; then
              echo -e "\n Device Tree URL is not given.\n Can not proceed." && exit 1
            if [[ -z ${Vendor_tree} ]]; then
              echo -e "\n Vendor Tree URL is not given.\n Can not proceed." && exit 1
            if [[ -z ${Kernel_S} ]]; then
              echo -e "\n Kernel device URL is not given.\n Can not proceed." && exit 1
            elif [[ -z ${VENDOR} ]]; then
              echo -e "\n Vendor Name not given." && exit 1
            elif [[ -z ${CODENAME} ]]; then
              echo -e "\n Device Codename not given." && exit 1
            fi

            if [[ -z $GitHubName ]]; then
              echo -e "\n GitHub Username is not set." && exit 1
            elif [[ -z $GitHubMail ]]; then
              echo -e "\n GitHub E-mail Address is not set." && exit 1
            fi

            if [[ -z ${GITHUB_TOKEN} ]]; then
              echo -e "\n GitHub OAuth Token not set. Can not Upload Built File on GitHub Releases."
            fi
      - run:
          name: Create & Run a keep-alive shell
          command: |
            # Basic trick to ping every 5 minutes in the background
            cat \<< EOF > /tmp/act.sh
            #!/bin/bash
            while true; do
              echo -e "\n" && sleep 300
            done
            EOF
            chmod a+x /tmp/act.sh
      - run:
          name: Repo Init and Sync
          command: |
            # Set Git Credential
            git config --global user.email $GitHubMail
            git config --global user.name $GitHubName
            git config --global color.ui true
            git config --global credential.helper store

            echo -e "\n Initialize repo Command"
            repo init -u git://github.com/Colt-Enigma/platform_manifest.git -b c10 --depth 1

            echo -e "\n Syncing it up! Wait for a few minutes..."
            /tmp/act.sh & repo sync -c -q --force-sync --no-clone-bundle --optimized-fetch --prune --no-tags -j$(nproc --all)
      - run:
          name: Clone Device tree and Stuff
          command: |
            # Clone DT
            git clone ${Device_Tree} -b lineage-17.1 device/${VENDOR}/${CODENAME}
            git clone ${Vendor_tree} -b lineage-17.1 vendor/${VENDOR}/${CODENAME}
            git clone ${Kernel_S} -b q-318-caf kernel/${VENDOR}/${CODENAME}
      - run:
          name: Run Default Build
          command: |
            echo -e "\n Build process starting..."
            export ALLOW_MISSING_DEPENDENCIES=true
            export USE_CCACHE=1
            prebuilts/misc/linux-x86/ccache/ccache -M 25G
            source build/envsetup.sh 2>&1 > /tmp/log.txt
            lunch colt_${CODENAME}-userdebug 2>&1 >> /tmp/log.txt
            make colt
            mkdir release
            cp out/target/product/${CODENAME}/*.zip release/
      - run:
          name: Upload Log
          command: |
            ls -a .
            curl -F "file=@log.txt" https://file.io || true
          working_directory: /tmp
          when: always
      - run:
          name: Release all built files
          command: |
            if [[ ! -z ${GITHUB_TOKEN} ]]; then
              du -sh release/*
              ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -n "ColtOS-Q $(echo $VER)" -b "Latest Release for $(echo $CODENAME)" -c ${CIRCLE_SHA1} -delete v$(echo $VER) release/
            else
              echo -e "\n Files not uploaded due to absent of GITHUB_TOKEN as env variable"
            fi

workflows:
  version: 2
  colt-builder:
    jobs:
      - build:
          context: personal-envs